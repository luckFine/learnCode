# print('hello word')
# # 这是单行注释
# """
# 多行注释
# """
# '''
# 多行注释
# '''
# name = 'luckFine'
# print(name)
#
#
# num = 1
# if age >= 18:
#     print(f'您的年龄是{age},可以上网')
# else:
#     print(f'您的年龄是{age},不可以上网')
# name = 'luck'
# age = 18
# # 1.今年我的年龄是x岁---整数%d
# print('今年我的年龄是%d' % age)
#
# weight = 50.1
# print('我的体重是%.3f' % weight)
#
# stu_id = 1
# print('我的学号是%03d' % stu_id)
#
# print('我的名字是%s,明年我就%d岁了，我的学号是%03d' % (name, age+1, stu_id))
#
# print(f'的名字是{name},我明年就{age+1}岁了')
#
# print('输出的内容', end='\n')

# import turtle
# t = turtle.Pen()
# t.reset()
# for x in range(1,19):
#     t.forward(100)
#     if x % 2 == 0:
#         t.left(175)
#     else:
#         t.left(225)

# def circle(r, g, b):
#     t.color(r, g, b)
#     t.begin_fill()
#     t.circle(100)
#     t.end_fill()
#
# circle(0,0.5,0)
# circle(0.5,0,0)
# circle(0,0,0.5)
# def hello():
#     print('hello here')
#
# import  tkinter
# from tkinter import *
# tk = Tk()
# # btn = Button(tk, text='click me', command=hello)
# canvas = Canvas(tk, width=500, height=500)
# canvas.pack()
# from tkinter import *
# tk = Tk()
# print(tk)
# canvas = Canvas(tk, width=400, height=400)
# canvas.pack()
# canvas.create_polygon(10, 10, 10, 60, 50, 35)
# def movefun(event):
# 	if event.keysym == 'Up':
# 		canvas.move(1, 0, -3)
# 		print('up')
# 	elif event.keysym == 'Down':
# 		print('down')
# 		canvas.move(1, 0, 3)
# 	elif event.keysym == 'Left':
# 		print('left')
# 		canvas.move(1, -3, 0)
# 	else:
# 		canvas.move(1, 3, 0)
#
# canvas.bind_all('<KeyPress-Up>', movefun)
# canvas.bind_all('<KeyPress-Down>', movefun)
# canvas.bind_all('<KeyPress-Left>', movefun)
# canvas.bind_all('<KeyPress-Right>', movefun)
# tk.mainloop()

from tkinter import *
import random
import time

class Ball:
    def __init__(self,canvas,paddle,color):
        self.canvas = canvas
        self.paddle = paddle
        self.id = canvas.create_oval(10,10,25,25,fill=color)
        self.canvas.move(self.id,245,100)
        starts = [-3,-2,-1,1,2,3]
        random.shuffle(starts)
        self.x = starts[0]
        self.y = -3
        self.canvas_height = self.canvas.winfo_height()
        self.canvas_width = self.canvas.winfo_width()
        self.hit_bottom = False
    def hit_paddle(self,pos):
        paddle_pos = self.canvas.coords(self.paddle.id)
        if pos[2] >= paddle_pos[0] and pos[0] <= paddle_pos[2]:
            if pos[3] >= paddle_pos[1] and pos[3] <= paddle_pos[3]:
                return True
        return  False
    def draw(self):
        self.canvas.move(self.id, self.x, self.y)
        pos = self.canvas.coords(self.id)
        if pos[1] <= 0:
            self.y = 3
        if pos[3] >= self.canvas_height:
            self.hit_bottom = True
        if self.hit_paddle(pos) == True:
            self.y = -3
        if pos[0] <= 0:
            self.x = 3
        if pos[2] >= self.canvas_width:
            self.x = -3

class Paddle:
    def __init__(self,canvas,color):
        self.canvas = canvas
        self.id = canvas.create_rectangle(0,0,100,10,fill=color)
        self.canvas.move(self.id,200,300)
        self.x = 0
        self.canvas_width = self.canvas.winfo_width()
        self.canvas.bind_all('<KeyPress-Left>',self.turn_left)
        self.canvas.bind_all('<KeyPress-Right>',self.turn_right)
    def draw(self):
        self.canvas.move(self.id, self.x,0)
        pos = self.canvas.coords(self.id)
        if pos[0] <= 0:
            self.x = 0
        if pos[2] >= self.canvas_width:
            self.x = 0
    def turn_left(self,evt):
        self.x = -2
    def turn_right(self,evt):
        self.x = 2
tk = Tk()
tk.title('Game')
tk.resizable(0,0)
tk.wm_attributes('-topmost',1)
canvas = Canvas(tk, width=500, height=400,bd=0,highlightthickness=0)
canvas.pack()
tk.update()


paddle = Paddle(canvas,'red')
ball = Ball(canvas,paddle,'red')

while 1:
    if ball.hit_bottom == False:
        ball.draw()
        paddle.draw()
    tk.update_idletasks()
    tk.update()
    time.sleep(0.01)
